{
	"auto_complete":
	{
		"selected_items":
		[
			[
				"text",
				"text-center"
			],
			[
				"con",
				"container"
			],
			[
				"on",
				"oni_list_page"
			],
			[
				"share",
				"share_list"
			],
			[
				"assert",
				"assertIn"
			],
			[
				"f",
				"find_element_by_id"
			],
			[
				"edi",
				"edith_browser"
			],
			[
				"get",
				"get_shared_with_list"
			],
			[
				"find",
				"find_elements_by_css_selector"
			],
			[
				"fin",
				"find_elements_by_css_selector"
			],
			[
				"new",
				"new_list"
			],
			[
				"is_",
				"is_authenticated"
			],
			[
				"moc",
				"mock_form"
			],
			[
				"mo",
				"mock_form"
			],
			[
				"mock",
				"mockNewListForm"
			],
			[
				"mock_",
				"mock_redirect"
			],
			[
				"first",
				"first_item_text"
			],
			[
				"list",
				"list_"
			],
			[
				"return",
				"return_value"
			],
			[
				"req",
				"request"
			],
			[
				"col-",
				"col-md-offset-3"
			],
			[
				"col",
				"col-md-12"
			],
			[
				"wiatfor",
				"wait_for_row_in_list_table"
			],
			[
				"cl",
				"click"
			],
			[
				"li",
				"live_server_url"
			],
			[
				"env",
				"env_vars"
			],
			[
				"_get",
				"_get_server_evn_vars"
			],
			[
				"host",
				"host_string"
			],
			[
				"manage",
				"manage_dot_py"
			],
			[
				"man",
				"manage_dot_py"
			],
			[
				"create",
				"create_pre_authenticated_session"
			],
			[
				"session",
				"session_key"
			],
			[
				"wait",
				"wait_for_email"
			],
			[
				"w",
				"wait"
			],
			[
				"nav",
				"navbar-right"
			],
			[
				"log",
				"login"
			],
			[
				"ass",
				"assertIsNone"
			],
			[
				"message",
				"message_body"
			],
			[
				"auth",
				"authenticate"
			],
			[
				"EMIAL",
				"EMAIL_HOST_PASSWORD"
			],
			[
				"En",
				"ENTER"
			],
			[
				"for",
				"for_list"
			],
			[
				"lis",
				"list_"
			],
			[
				"Existin",
				"ExistingListItemForm"
			],
			[
				"va",
				"ValidationError"
			],
			[
				"asse",
				"assertEqual"
			],
			[
				"asser",
				"assertFalse"
			],
			[
				"ex",
				"expected_error"
			],
			[
				"as",
				"assertRaises"
			],
			[
				"wa",
				"wait_for_row_in_list_table"
			],
			[
				"Item",
				"ItemForm"
			],
			[
				"wia",
				"wait_for_row_in_list_table"
			],
			[
				"SE",
				"SECRET_KEY"
			],
			[
				"met",
				"meta\tTag"
			],
			[
				"input",
				"inputbox"
			],
			[
				"se",
				"self"
			],
			[
				"item",
				"item_text"
			],
			[
				"fis",
				"fist_saved_item"
			],
			[
				"saved",
				"saved_list"
			],
			[
				"fist",
				"first_item"
			],
			[
				"the",
				"the-only-list-in-the-world"
			],
			[
				"fra",
				"Francis_list_url"
			],
			[
				"we",
				"webdriver"
			],
			[
				"in",
				"inputbox"
			],
			[
				"i",
				"item_text"
			],
			[
				"fi",
				"fist_saved_item"
			],
			[
				"sav",
				"saved_items"
			],
			[
				"chec",
				"check_for_row_in_list_table"
			],
			[
				"head",
				"header_text"
			],
			[
				"project",
				"project_name"
			],
			[
				"gerber",
				"gerbersDir"
			],
			[
				"Get",
				"GetOutputDirectory"
			],
			[
				"gerb",
				"gerbersDir"
			],
			[
				"ger",
				"gerbersDir"
			]
		]
	},
	"buffers":
	[
		{
			"file": "/D/pcbs/Leawood/Leawood-MW/Leawood/urls.py",
			"settings":
			{
				"buffer_size": 919,
				"encoding": "UTF-8",
				"line_ending": "Windows"
			}
		},
		{
			"contents": "from django.test import LiveServerTestCase\nfrom selenium import webdriver\nfrom selenium.webdriver.common.keys import Keys\nimport unittest\nimport time\n\nclass newVisitorTest(LiveServerTestCase):\n\n\tdef setUp(self):\n\t\tself.browser = webdriver.Firefox()\n\n\tdef tearDown(self):\n\t\tself.browser.quit()\n\n\n\n\tdef test_can_see_the_dashboard(self):\n\t\t# Graeme comes to the PC and opens the Leawood App by going to \n\t\t# http://host/leawood\n\n\t\tself.browser.get(self.live_server_url)\n\t\tassert 'Leawood' in self.browser.title\n\n\t\t# He sees the main menu bar. Since he is not signed in, there is only\n\t\t# the dashboard tab and an option to sign in at the top.\n\t\t# TODO\n\t\tsignin_link = self.browser.find_element_by_link_text('Sign in')\n\t\tself.assertTrue(signin_link)\n\t\tself.assertEqual('Sign in', signin_link.text)\n\n\t\t# He tries to sign in\n\t\tsignin_link.click()\n\t\t# and sees that a Model dialog appears and requests a user name\n\t\t# and password\n\t\tlogin_dialog = self.browser.find_element_by_id('id_loginModal')\n\t\tself.assertEqual('false', login_dialog.get_attribute('aria-hidden'))\n\t\t\n\n\n\t\t# He also sees only the Dashboard that is in a view only mode.\n\t\theader_text = self.browser.find_element_by_tag_name('h1').text\n\t\tself.assertIn('Dashboard', header_text)\n\n\t\t# The dashboard shows a graph for some of the devices.\n\t\t# TODO\n\n\t\t# There is a search area where the devices can be searched for and\n\t\t# the dashboard filtered for those/that specific device(s).\n\t\tsearchbox = self.browser.find_element_by_id('id_search_filter')\n\t\tself.assertEqual(searchbox.get_attribute('placeholder'), 'device filter')\n\n\t\t# He wants to see only the Solar charges\n\t\t# Graeme enters \"solar\" into the search box\n\t\tsearchbox.send_keys('solar')\n\n\t\t# When he hits ENTER, the list is reduced only devices with \"solar\"\n\t\t# in their name\n\t\tsearchbox.send_keys(Keys.ENTER)\n\t\ttime.sleep(1)\n\n\t\tdevice_table = self.browser.find_element_by_id('id_device_table')\n\t\trows = device_table.find_elements_by_tag_name('tr')\n\t\tself.assertTrue(\n\t\t\tall('solar' in row.text.lower() for row in rows)\n\t\t)\n\n\n\n\t\t# Graeme signs on and sees that the menu has expanded to be able \n\t\t# to manage the devices\n\n\t\t# First, he has to sign in. He clicks on the sign in link and\n\t\t# a Modal dialog appears asking for his credentials.\n\t\tsignin_link.click()\n\t\ttime.sleep(1)\n\t\tuser_name = self.browser.find_element_by_id('id_user_name')\n\t\tself.assertEqual(user_name.get_attribute('placeholder'), 'Enter your user ID')\n\n\n\n\t\tuser_name.send_keys('graeme')\n\t\tpassword = self.browser.find_element_by_id('id_password')\n\t\tself.assertEqual(password.get_attribute('placeholder'), 'Enter your password')\n\t\tpassword.send_keys('welcome1')\n\t\tpassword.send_keys(Keys.ENTER)\n\t\tself.assertIn('Sign on successful', self.browser.find_element_by_id('id_messages').text)\n\n\t\t# He goes to the Devices tab.\n\n\t\t# There is sees the list of registered devices.\n\n\t\t# On each device entry, it also shows its last message and when\n\t\t# it was sent.\n\n\t\t# There is also a search are where he can filter the device or \n\t\t# devices shown.\n\n\t\tself.fail('Finish the test')\n\n\t\t## ================================================================ ##\n\t\t#\n\t\t# Devices\n\t\t#\tThe registration and listing of the devices\n\t\t# Locations\n\t\t#\tThe list of location where the devices can be deployed.\n\t\t# Logs\n\t\t#\tThe data the comes from the devices - timesptamped\n\t\t# Units\n\t\t#\tThe units of data that is published by the devices\n\t\t#\n\t\t## ================================================================ ##\n\n",
			"file": "/D/pcbs/Leawood/Leawood-MW/functional_tests/tests.py",
			"file_size": 3574,
			"file_write_time": 131950467264491875,
			"settings":
			{
				"buffer_size": 3473,
				"encoding": "UTF-8",
				"line_ending": "Windows"
			}
		},
		{
			"file": "/D/pcbs/Leawood/Leawood-MW/dashboard/templates/dashboard/dashboard.html",
			"settings":
			{
				"buffer_size": 4275,
				"encoding": "UTF-8",
				"line_ending": "Windows"
			}
		}
	],
	"build_system": "",
	"build_system_choices":
	[
	],
	"build_varint": "",
	"command_palette":
	{
		"height": 170.0,
		"last_filter": "text",
		"selected_items":
		[
			[
				"text",
				"Set Syntax: Plain Text"
			],
			[
				"json",
				"Set Syntax: JSON"
			]
		],
		"width": 392.0
	},
	"console":
	{
		"height": 0.0,
		"history":
		[
		]
	},
	"distraction_free":
	{
		"menu_visible": true,
		"show_minimap": false,
		"show_open_files": false,
		"show_tabs": false,
		"side_bar_visible": false,
		"status_bar_visible": false
	},
	"expanded_folders":
	[
		"/D/pcbs/Leawood/Leawood-MW",
		"/D/pcbs/Leawood/Leawood-MW/dashboard",
		"/D/pcbs/Leawood/Leawood-MW/dashboard/templates",
		"/D/pcbs/Leawood/Leawood-MW/dashboard/templates/dashboard",
		"/D/pcbs/Leawood/Leawood-MW/functional_tests",
		"/D/pcbs/Leawood/Leawood-MW/Leawood"
	],
	"file_history":
	[
		"/D/python/python-tdd-book/functional_tests/test_my_lists.py",
		"/D/python/python-tdd-book/functional_tests/test_sharing.py",
		"/D/python/python-tdd-book/functional_tests/my_lists_page.py",
		"/D/python/python-tdd-book/functional_tests/list_page.py",
		"/D/python/python-tdd-book/lists/templates/list.html",
		"/D/python/python-tdd-book/lists/templates/base.html",
		"/D/python/python-tdd-book/functional_tests/test_simple_list_creation.py",
		"/D/python/python-tdd-book/lists/tests/test_models.py",
		"/D/python/python-tdd-book/lists/models.py",
		"/D/python/python-tdd-book/lists/templates/my_lists.html",
		"/D/python/python-tdd-book/lists/views.py",
		"/D/python/python-tdd-book/lists/tests/test_views.py",
		"/D/python/python-tdd-book/functional_tests/test_layout_and_styling.py",
		"/D/python/python-tdd-book/functional_tests/test_list_item_validation.py",
		"/D/python/python-tdd-book/lists/urls.py",
		"/D/python/python-tdd-book/functional_tests/base.py",
		"/D/python/python-tdd-book/lists/tests/test_forms.py",
		"/D/python/python-tdd-book/.gitignore",
		"/D/python/python-tdd-book/lists/forms.py",
		"/D/python/python-tdd-book/lists/static/list.js",
		"/D/python/python-tdd-book/virtualenv/Lib/site-packages/django/forms/formsets.py",
		"/D/python/python-tdd-book/accounts/authentication.py",
		"/D/python/python-tdd-book/functional_tests/test_login.py",
		"/D/python/python-tdd-book/functional_tests/management/commands/create_session.py",
		"/D/python/python-tdd-book/superlists/settings.py",
		"/D/python/python-tdd-book/functional_tests/server_tools.py",
		"/D/python/python-tdd-book/deploy_tools/fabfile.py",
		"/D/python/python-tdd-book/accounts/views.py",
		"/D/python/python-tdd-book/accounts/tests/test_views.py",
		"/D/python/python-tdd-book/accounts/tests/test_authentication.py",
		"/D/python/python-tdd-book/accounts/models.py",
		"/D/python/python-tdd-book/accounts/tests/test_models.py",
		"/D/python/python-tdd-book/accounts/urls.py",
		"/D/python/python-tdd-book/superlists/urls.py",
		"/D/python/python-tdd-book/accounts/tests/test_modesl.py",
		"/D/python/python-tdd-book/lists/static/tests/tests.html",
		"/D/python/python-tdd-book/static/base.css",
		"/D/python/python-tdd-book/lists/templates/home.html",
		"/D/python/python-tdd-book/deploy_tools/nginx.template.conf",
		"/D/python/python-tdd-book/deploy_tools/gunicorn-systemd.template.service",
		"/D/python/python-tdd-book/deploy_tools/provisioning_notes.md",
		"/D/python/python-tdd-book/accounts/templates/login_email_sent.html",
		"/D/python/python-tdd-book/lists/static/base.css",
		"/D/python/python-tdd-book/lists/tests.py",
		"/D/python/python-tdd-book/functional_tests/tests.py",
		"/J/config.txt",
		"/D/python/python-tdd-book/lists/static/bootstrap/version.txt",
		"/D/python/python-tdd-book/functional_tests.py",
		"/D/pcbs/ttm/lib/ttm.pretty/c3po_FCu_SolderMask_text.kicad_mod",
		"/D/Dropbox/CE/eeschema.hotkeys",
		"/D/Dropbox/CE/pcbnew.hotkeys",
		"/D/pcbs/ttm/lib/ttm.pretty/c3po_FSilk.kicad_mod",
		"/D/pcbs/ttm/lib/ttm.pretty/c3po_FSolderMask.kicad_mod",
		"/D/pcbs/ttm/lib/ttm.pretty/c3po_FCuSolderMaks.kicad_mod",
		"/D/pcbs/ttm/lib/ttm.pretty/c3po_FCu.kicad_mod",
		"/D/pcbs/ttm/lib/ttm.pretty/c3po_EdgeCut.kicad_mod",
		"/D/python/python-tdd-book/virtualenv/Scripts/activate.bat",
		"/C/Users/Steven/AppData/Local/Temp/rename_project-2.py",
		"/C/Users/Steven/AppData/Local/Temp/rename_project-1.py",
		"/D/pcbs/CE_Header/SensorBoard01/SensorBoard.pro",
		"/D/Dropbox/EA/Leawood/Doc/CE_Update_180704",
		"/D/pcbs/AACell/kicad/lib/AACell-Footprint.pretty/AACell-Both.kicad_mod",
		"/D/pcbs/BlinkyBear/kicad/lib/blinky-bear.pretty/BlinkyBear_outline.kicad_mod",
		"/D/Dropbox/python/dash/dash-sentiment-tutorial-5.py",
		"/D/Dropbox/python/dash/dash-tutorial.py",
		"/D/python/dash/dash-tutorial.py",
		"/D/pcbs/BlinkyBear/kicad/lib/blinky-bear.pretty/BlinkyBear_Heart_FCu.kicad_mod",
		"/D/pcbs/BlinkyBear/kicad/BlinkyBear.kicad_pcb",
		"/D/pcbs/BlinkyBear/kicad/lib/blinky-bear.pretty/BlinkyBear_ZoneFill.kicad_mod",
		"/D/pcbs/AdventSternla/firmware/NeoStrip_02/NeoStrip/main.c",
		"/D/pcbs/AdventSternla/firmware/NeoStrip_02/NeoStrip/neopixel.c",
		"/D/pcbs/AdventSternla/firmware/NeoStrip5Channel/NeoStrip5Channel_plus/main.c",
		"/D/pcbs/AdventSternla/firmware/NeoStrip5Channel/NeoStrip5Channel/main.c",
		"/C/Users/Steven/AppData/Local/Temp/Temp1_FCMVT2CG8QJDUFI.zip/attiny13_595_Instructable.c",
		"/D/pcbs/AdventSternla/pcb/FiveChannel/FiveChannel.pro",
		"/D/pcbs/AdventSternla/pcb/FiveChannel/FiveChannel.kicad_pcb",
		"/D/pcbs/AdventSternla/pcb/FiveChannel/FiveChannel.sch",
		"/D/pcbs/Leawood/FieldDevice/kicad/lib/fieldDevice_symbols.lib",
		"/D/Dropbox/CE/DOGS/DOGS104_SSD1803A_SPI/DOGS104_SSD1803A_SPI/SSD1803A/src/lcd_spi.c",
		"/D/ElectronicAssembly/ApplicationNotes/DOGS104_SSD1803A_SPI/DOGS104_SSD1803A_SPI/SSD1803A/src/main.c",
		"/D/ElectronicAssembly/ApplicationNotes/DOGS104_SSD1803A_SPI/DOGS104_SSD1803A_SPI/SSD1803A/src/lcd_spi.c",
		"/D/Dropbox/CE/DOGS/DOGS104_SSD1803A_SPI/DOGS104_SSD1803A_SPI/SSD1803A/src/main.c",
		"/D/pcbs/DisplayAdapter_DOGS104/firmware/arduino/DisplayTest/lcd_spi",
		"/D/Dropbox/CE/DOGS/DOGS104_SSD1803A_SPI/DOGS104_SSD1803A_SPI/SSD1803A/src/lcd_spi.h",
		"/D/pcbs/DisplayAdapter_DOGS104/firmware/arduino/DisplayTest/lcd_spi.cpp"
	],
	"find":
	{
		"height": 40.0
	},
	"find_in_files":
	{
		"height": 107.0,
		"where_history":
		[
		]
	},
	"find_state":
	{
		"case_sensitive": false,
		"find_history":
		[
			"button",
			"loginModal"
		],
		"highlight": true,
		"in_selection": false,
		"preserve_case": false,
		"regex": false,
		"replace_history":
		[
		],
		"reverse": false,
		"show_context": true,
		"use_buffer2": true,
		"whole_word": false,
		"wrap": true
	},
	"groups":
	[
		{
			"selected": 1,
			"sheets":
			[
				{
					"buffer": 0,
					"file": "/D/pcbs/Leawood/Leawood-MW/Leawood/urls.py",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 919,
						"regions":
						{
						},
						"selection":
						[
							[
								839,
								839
							]
						],
						"settings":
						{
							"syntax": "Packages/Python/Python.sublime-syntax",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 2,
					"type": "text"
				},
				{
					"buffer": 1,
					"file": "/D/pcbs/Leawood/Leawood-MW/functional_tests/tests.py",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 3473,
						"regions":
						{
						},
						"selection":
						[
							[
								1541,
								1544
							]
						],
						"settings":
						{
							"syntax": "Packages/Python/Python.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 505.0,
						"zoom_level": 1.0
					},
					"stack_index": 0,
					"type": "text"
				},
				{
					"buffer": 2,
					"file": "/D/pcbs/Leawood/Leawood-MW/dashboard/templates/dashboard/dashboard.html",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 4275,
						"regions":
						{
						},
						"selection":
						[
							[
								2586,
								2597
							]
						],
						"settings":
						{
							"syntax": "Packages/HTML/HTML.sublime-syntax"
						},
						"translation.x": 0.0,
						"translation.y": 1201.0,
						"zoom_level": 1.0
					},
					"stack_index": 1,
					"type": "text"
				}
			]
		}
	],
	"incremental_find":
	{
		"height": 28.0
	},
	"input":
	{
		"height": 39.0
	},
	"layout":
	{
		"cells":
		[
			[
				0,
				0,
				1,
				1
			]
		],
		"cols":
		[
			0.0,
			1.0
		],
		"rows":
		[
			0.0,
			1.0
		]
	},
	"menu_visible": true,
	"output.find_results":
	{
		"height": 138.0
	},
	"pinned_build_system": "",
	"project": "Leawood-MW.sublime-project",
	"replace":
	{
		"height": 52.0
	},
	"save_all_on_build": true,
	"select_file":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
		],
		"width": 0.0
	},
	"select_project":
	{
		"height": 500.0,
		"last_filter": "",
		"selected_items":
		[
			[
				"",
				"D:\\python\\python-tdd-book\\Python-TDD0Book.sublime-project"
			]
		],
		"width": 380.0
	},
	"select_symbol":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
		],
		"width": 0.0
	},
	"selected_group": 0,
	"settings":
	{
	},
	"show_minimap": true,
	"show_open_files": false,
	"show_tabs": true,
	"side_bar_visible": true,
	"side_bar_width": 250.0,
	"status_bar_visible": true,
	"template_settings":
	{
	}
}
